:root {
    --code-color-normal: #504e55;
    --code-color-comment: #77767b;
    --code-color-keyword: #ffa348;
    --code-color-type: #218787;
    --code-color-meta: #c64600;
    --code-color-meta-alt: #d38b09;
    --code-color-meta-alt-alt: #e19243;
    --code-color-literal: #4e57ba;
    --code-color-attribute: #589f14;
    --code-color-builtin: #1c71d8;
    --code-color-link: #62a0ea;
}

@media (prefers-color-scheme: dark) {
    :root {
        --code-color-normal: #c0bfbc;
        --code-color-comment: #77767b;
        --code-color-keyword: #ffa348;
        --code-color-type: #58bea6;
        --code-color-meta: #db5e02;
        --code-color-meta-alt: #edbc12;
        --code-color-meta-alt-alt: #e19243;
        --code-color-literal: #7d8ac7;
        --code-color-attribute: #4e9906;
        --code-color-builtin: #609be2;
        --code-color-link: #62a0ea;
    }
}

.highlight-rules() {
    pre code.hljs {
        display: block;
        overflow-x: auto;
        padding: 1em
    }
    
    code.hljs {
        padding: 3px 5px
    }
    
    .hljs {
        background: #fff;
        color: var(--code-color-normal);
    }

    .hljs-title,
    .hljs-built_in {
        color: var(--code-color-normal);
    }
    
    .hljs-comment,
    .hljs-quote,
    .hljs-variable {
        color: var(--code-color-comment);
    }
    
    .hljs-keyword,
    .hljs-name {
        color: var(--code-color-keyword);
    }
    
    .hljs-addition,
    .hljs-attribute,
    .hljs-section,
    .hljs-string,
    .hljs-template-tag,
    .hljs-template-variable,
    .hljs-type,
    .hljs-selector-tag,
    .hljs-tag {
        color: var(--code-color-type);
    }

    .hljs-string .hljs-tag,
    .hljs-meta .hljs-string,
    .hljs-literal,
    .hljs-selector-pseudo {
        color: var(--code-color-literal);
    }

    .hljs-keyword,
    .hljs-type,
    .hljs-selector-pseudo,
    .hljs-selector-tag {
        font-weight: bold;
    }    

    .hljs-meta,
    .hljs-deletion,
    .hljs-attr .hljs-tag,
    .hljs-selector-attr {
        color: var(--code-color-meta) !important;
    }
    
    .hljs-doctag {
        color: var(--code-color-normal);
    }
    
    .hljs-attr,
    .hljs-selector-class {
        color: var(--code-color-attribute);
    }
    
    .hljs-bullet,
    .hljs-link,
    .hljs-symbol {
        color: var(--code-color-normal);
    }
    
    .hljs-emphasis {
        font-style: italic;
    }
    
    .hljs-strong {
        font-weight: 700;
    }

    // Language-specific.
    .language-text-x-csrc { // C
        .hljs-meta .hljs-string {
            color: var(--code-color-type);
        }
    }

    .language-text-xml {
        .hljs-meta {
            color: var(--code-color-meta-alt);
        }
    }

    .language-text-css {
        .hljs-meta {
            font-weight: bold;
            color: var(--code-color-meta-alt-alt);
        }

        .hljs-attribute {
            color: var(--code-color-meta);
        }

        .hljs-built_in {
            color: var(--code-color-builtin);
        }
    }
}

.codemirror-rules() {
    // Default color
    .cm-s-default {
        color: var(--code-color-normal);
    }

    // Selectors taken from codemirror.css.
    .cm-s-default .cm-header {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-quote {
        color: var(--code-color-normal);
    }
    
    .cm-negative {
        color: var(--code-color-normal);
    }
    
    .cm-positive {
        color: var(--code-color-normal);
    }
    
    .cm-header,
    .cm-strong {
        font-weight: bold;
    }
    
    .cm-em {
        font-style: italic;
    }
    
    .cm-link {
        text-decoration: underline;
    }
    
    .cm-strikethrough {
        text-decoration: line-through;
    }
    
    .cm-s-default .cm-keyword {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-atom {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-number {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-def {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-variable,
    .cm-s-default .cm-punctuation,
    .cm-s-default .cm-property,
    .cm-s-default .cm-operator {}
    
    .cm-s-default .cm-variable-2 {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-variable-3,
    .cm-s-default .cm-type {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-comment {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-string {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-string-2 {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-meta {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-qualifier {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-builtin {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-bracket {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-tag {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-attribute {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-hr {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-link {
        color: var(--code-color-normal);
    }
    
    .cm-s-default .cm-error {
        color: var(--code-color-normal);
    }
    
    .cm-invalidchar {
        color: var(--code-color-normal);
    }
}

.highlight-rules() !important;
.codemirror-rules() !important;